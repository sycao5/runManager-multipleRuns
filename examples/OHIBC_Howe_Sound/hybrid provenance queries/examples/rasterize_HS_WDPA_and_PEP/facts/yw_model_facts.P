
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'Rasterize_HS_WDPA_and_PEP', 'Rasterize_HS_WDPA_and_PEP', 1, 54).
program(2, 'set_up_configuration_and_start_provenance_tracking', 'Rasterize_HS_WDPA_and_PEP.set_up_configuration_and_start_provenance_tracking', 14, 19).
program(3, 'rasterize_ohibc_rgn_raster_500m_shape_file_at_500m_resolution', 'Rasterize_HS_WDPA_and_PEP.rasterize_ohibc_rgn_raster_500m_shape_file_at_500m_resolution', 20, 26).
program(4, 'load_and_create_howe_sound_wdpa_pep_files', 'Rasterize_HS_WDPA_and_PEP.load_and_create_howe_sound_wdpa_pep_files', 27, 35).
program(5, 'rasterize_howe_sound_wdpa_shape_file', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_wdpa_shape_file', 36, 44).
program(6, 'rasterize_howe_sound_pep_shape_file', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_pep_shape_file', 45, 53).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'setup_configuration_file', 'Rasterize_HS_WDPA_and_PEP<-setup_configuration_file', 2, 1).
port(2, 'in', 'hs_wdpa_shp_file', 'Rasterize_HS_WDPA_and_PEP<-hs_wdpa_shp_file', 4, 2).
port(3, 'in', 'hs_pep_shp_file', 'Rasterize_HS_WDPA_and_PEP<-hs_pep_shp_file', 6, 3).
port(4, 'in', 'ohibc_rgn_raster_500m', 'Rasterize_HS_WDPA_and_PEP<-ohibc_rgn_raster_500m', 8, 4).
port(5, 'out', 'hs_wdpa_rast_file', 'Rasterize_HS_WDPA_and_PEP->hs_wdpa_rast_file', 10, 5).
port(6, 'out', 'hs_pep_rast_file', 'Rasterize_HS_WDPA_and_PEP->hs_pep_rast_file', 12, 6).
port(7, 'in', 'setup_configuration_file', 'Rasterize_HS_WDPA_and_PEP.set_up_configuration_and_start_provenance_tracking<-setup_configuration_file', 15, 7).
port(8, 'out', 'dir_spatial', 'Rasterize_HS_WDPA_and_PEP.set_up_configuration_and_start_provenance_tracking->dir_spatial', 17, 8).
port(9, 'out', 'dir_goal', 'Rasterize_HS_WDPA_and_PEP.set_up_configuration_and_start_provenance_tracking->dir_goal', 18, 9).
port(10, 'param', 'dir_spatial', 'Rasterize_HS_WDPA_and_PEP.rasterize_ohibc_rgn_raster_500m_shape_file_at_500m_resolution<-dir_spatial', 21, 8).
port(11, 'in', 'ohibc_rgn_raster_500m', 'Rasterize_HS_WDPA_and_PEP.rasterize_ohibc_rgn_raster_500m_shape_file_at_500m_resolution<-ohibc_rgn_raster_500m', 22, 10).
port(12, 'out', 'rast_base', 'Rasterize_HS_WDPA_and_PEP.rasterize_ohibc_rgn_raster_500m_shape_file_at_500m_resolution->rast_base', 24, 11).
port(13, 'param', 'dir_goal', 'Rasterize_HS_WDPA_and_PEP.load_and_create_howe_sound_wdpa_pep_files<-dir_goal', 28, 9).
port(14, 'in', 'hs_wdpa_shp_file', 'Rasterize_HS_WDPA_and_PEP.load_and_create_howe_sound_wdpa_pep_files<-hs_wdpa_shp_file', 29, 12).
port(15, 'in', 'hs_pep_shp_file', 'Rasterize_HS_WDPA_and_PEP.load_and_create_howe_sound_wdpa_pep_files<-hs_pep_shp_file', 31, 13).
port(16, 'out', 'hs_wdpa_rast_file_handle', 'Rasterize_HS_WDPA_and_PEP.load_and_create_howe_sound_wdpa_pep_files->hs_wdpa_rast_file_handle', 33, 14).
port(17, 'out', 'hs_pep_rast_file_handle', 'Rasterize_HS_WDPA_and_PEP.load_and_create_howe_sound_wdpa_pep_files->hs_pep_rast_file_handle', 34, 15).
port(18, 'in', 'hs_wdpa_shp_file', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_wdpa_shape_file<-hs_wdpa_shp_file', 37, 12).
port(19, 'in', 'rast_base', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_wdpa_shape_file<-rast_base', 39, 11).
port(20, 'in', 'hs_wdpa_rast_file_handle', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_wdpa_shape_file<-hs_wdpa_rast_file_handle', 41, 14).
port(21, 'out', 'hs_wdpa_rast_file', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_wdpa_shape_file->hs_wdpa_rast_file', 42, 16).
port(22, 'in', 'hs_pep_shp_file', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_pep_shape_file<-hs_pep_shp_file', 46, 13).
port(23, 'in', 'rast_base', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_pep_shape_file<-rast_base', 48, 11).
port(24, 'in', 'hs_pep_rast_file_handle', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_pep_shape_file<-hs_pep_rast_file_handle', 50, 15).
port(25, 'out', 'hs_pep_rast_file', 'Rasterize_HS_WDPA_and_PEP.rasterize_howe_sound_pep_shape_file->hs_pep_rast_file', 51, 17).

% FACT: port_alias(port_id, alias).
port_alias(1, 'setup_R').
port_alias(7, 'setup_R').
port_alias(12, 'extent_of_howe_sound').
port_alias(19, 'extent_of_howe_sound').
port_alias(23, 'extent_of_howe_sound').

% FACT: port_uri_template(port_id, uri).
port_uri_template(2, 'file:{dir_goal}/spatial/hs_wdpa_poly.shp').
port_uri_template(3, 'file:{dir_goal}/spatial/hs_pep_poly.shp').
port_uri_template(4, 'file:{dir_spatial}/raster/ohibc_rgn_raster_500m.tif').
port_uri_template(5, 'file:{dir_goal}/spatial/hs_wdpa_rast_500m.tif').
port_uri_template(6, 'file:{dir_goal}/spatial/hs_pep_rast_500m.tif').
port_uri_template(11, 'file:{dir_spatial}/raster/ohibc_rgn_raster_500m.tif').
port_uri_template(14, 'file:{dir_goal}/spatial/hs_wdpa_poly.shp').
port_uri_template(15, 'file:{dir_goal}/spatial/hs_pep_poly.shp').
port_uri_template(18, 'file:{dir_goal}/spatial/hs_wdpa_poly.shp').
port_uri_template(21, 'file:{dir_goal}/spatial/hs_wdpa_rast_500m.tif').
port_uri_template(22, 'file:{dir_goal}/spatial/hs_pep_poly.shp').
port_uri_template(25, 'file:{dir_goal}/spatial/hs_pep_rast_500m.tif').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(1, 4).
has_in_port(2, 7).
has_in_port(3, 10).
has_in_port(3, 11).
has_in_port(4, 13).
has_in_port(4, 14).
has_in_port(4, 15).
has_in_port(5, 18).
has_in_port(5, 19).
has_in_port(5, 20).
has_in_port(6, 22).
has_in_port(6, 23).
has_in_port(6, 24).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 5).
has_out_port(1, 6).
has_out_port(2, 8).
has_out_port(2, 9).
has_out_port(3, 12).
has_out_port(4, 16).
has_out_port(4, 17).
has_out_port(5, 21).
has_out_port(6, 25).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'setup_R', '[setup_R]').
data(2, 'hs_wdpa_shp_file', '[hs_wdpa_shp_file]').
data(3, 'hs_pep_shp_file', '[hs_pep_shp_file]').
data(4, 'ohibc_rgn_raster_500m', '[ohibc_rgn_raster_500m]').
data(5, 'hs_wdpa_rast_file', '[hs_wdpa_rast_file]').
data(6, 'hs_pep_rast_file', '[hs_pep_rast_file]').
data(7, 'setup_R', 'Rasterize_HS_WDPA_and_PEP[setup_R]').
data(8, 'dir_spatial', 'Rasterize_HS_WDPA_and_PEP[dir_spatial]').
data(9, 'dir_goal', 'Rasterize_HS_WDPA_and_PEP[dir_goal]').
data(10, 'ohibc_rgn_raster_500m', 'Rasterize_HS_WDPA_and_PEP[ohibc_rgn_raster_500m]').
data(11, 'extent_of_howe_sound', 'Rasterize_HS_WDPA_and_PEP[extent_of_howe_sound]').
data(12, 'hs_wdpa_shp_file', 'Rasterize_HS_WDPA_and_PEP[hs_wdpa_shp_file]').
data(13, 'hs_pep_shp_file', 'Rasterize_HS_WDPA_and_PEP[hs_pep_shp_file]').
data(14, 'hs_wdpa_rast_file_handle', 'Rasterize_HS_WDPA_and_PEP[hs_wdpa_rast_file_handle]').
data(15, 'hs_pep_rast_file_handle', 'Rasterize_HS_WDPA_and_PEP[hs_pep_rast_file_handle]').
data(16, 'hs_wdpa_rast_file', 'Rasterize_HS_WDPA_and_PEP[hs_wdpa_rast_file]').
data(17, 'hs_pep_rast_file', 'Rasterize_HS_WDPA_and_PEP[hs_pep_rast_file]').

% FACT: channel(channel_id, data_id).
channel(1, 5).
channel(2, 6).
channel(3, 7).
channel(4, 8).
channel(5, 10).
channel(6, 9).
channel(7, 12).
channel(8, 12).
channel(9, 13).
channel(10, 13).
channel(11, 11).
channel(12, 11).
channel(13, 14).
channel(14, 15).
channel(15, 1).
channel(16, 2).
channel(17, 2).
channel(18, 3).
channel(19, 3).
channel(20, 4).
channel(21, 16).
channel(22, 17).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(21, 1).
port_connects_to_channel(25, 2).
port_connects_to_channel(7, 3).
port_connects_to_channel(8, 4).
port_connects_to_channel(10, 4).
port_connects_to_channel(11, 5).
port_connects_to_channel(9, 6).
port_connects_to_channel(13, 6).
port_connects_to_channel(14, 7).
port_connects_to_channel(18, 8).
port_connects_to_channel(15, 9).
port_connects_to_channel(22, 10).
port_connects_to_channel(12, 11).
port_connects_to_channel(19, 11).
port_connects_to_channel(12, 12).
port_connects_to_channel(23, 12).
port_connects_to_channel(16, 13).
port_connects_to_channel(20, 13).
port_connects_to_channel(17, 14).
port_connects_to_channel(24, 14).
port_connects_to_channel(7, 15).
port_connects_to_channel(14, 16).
port_connects_to_channel(18, 17).
port_connects_to_channel(15, 18).
port_connects_to_channel(22, 19).
port_connects_to_channel(11, 20).
port_connects_to_channel(21, 21).
port_connects_to_channel(25, 22).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 3).
inflow_connects_to_channel(4, 5).
inflow_connects_to_channel(2, 7).
inflow_connects_to_channel(2, 8).
inflow_connects_to_channel(3, 9).
inflow_connects_to_channel(3, 10).
inflow_connects_to_channel(1, 15).
inflow_connects_to_channel(2, 16).
inflow_connects_to_channel(2, 17).
inflow_connects_to_channel(3, 18).
inflow_connects_to_channel(3, 19).
inflow_connects_to_channel(4, 20).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(5, 1).
outflow_connects_to_channel(6, 2).
outflow_connects_to_channel(5, 21).
outflow_connects_to_channel(6, 22).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).
uri_variable(1, 'dir_goal', 2).
uri_variable(2, 'dir_goal', 3).
uri_variable(3, 'dir_spatial', 4).
uri_variable(4, 'dir_goal', 5).
uri_variable(5, 'dir_goal', 6).
uri_variable(6, 'dir_spatial', 11).
uri_variable(7, 'dir_goal', 14).
uri_variable(8, 'dir_goal', 15).
uri_variable(9, 'dir_goal', 18).
uri_variable(10, 'dir_goal', 21).
uri_variable(11, 'dir_goal', 22).
uri_variable(12, 'dir_goal', 25).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
