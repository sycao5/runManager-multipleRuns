:- import concat_atom/2 from string.

eol :- write('\n').

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% graphviz styles for YW prospective provenance graphs

gv_nodestyle__atomic_step :-
    write('node[shape=box style="filled" fillcolor="#CCFFCC" peripheries=1 fontname=Courier]'), eol.

gv_nodestyle__subworkflow :-
    gv_nodestyle__atomic_step.

gv_node_style__data :-
    gv_nodestyle(box, 'rounded,filled', '#FFFFCC', 1, 'Helvetica').

gv_node_style__param :-
    gv_nodestyle(box, 'rounded,filled', '#FFFFFF', 1, 'Helvetica').

gv_node_style__workflow_port :-
    gv_nodestyle(circle, '#FFFFFF', 1, '0.2').
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

gv_nodes__execution(RM) :-
	      execmeta(_,ExecutionId,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_),
        tag(_,ExecutionId,Tag),
        gv_labeled_node(Tag),
        fail
        ;
        true.

gv_nodes__file(RM) :-
       filemeta(_,_,FilePath,_,_,_,_,_,_,_,_),
       gv_labeled_node(FilePath),
       fail
       ;
       true.

gv_edges__file_to_execution(RM) :-
	     filemeta(FileId,ExecutionId,FilePath,_,_,_,_,_,_,_,_),
       execmeta(_,ExecutionId,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_),
       tag(_,ExecutionId,Tag),
	     input_files_to_execution_edges(ExecutionId,FileId),
       gv_unlabeled_edge(FilePath,Tag),
       fail
       ;
       true.

gv_edges__execution_to_file(RM) :-
       execmeta(_,ExecutionId,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_),
       tag(_,ExecutionId,Tag),
       filemeta(FileId,ExecutionId,FilePath,_,_,_,_,_,_,_,_),
       execution_to_output_files_edges(ExecutionId,FileId),
       gv_unlabeled_edge(Tag,FilePath),
       fail
       ;
       true.
